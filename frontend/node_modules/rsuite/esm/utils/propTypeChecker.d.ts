import PropTypes, { Requireable, Validator } from 'prop-types';
declare type ExtractValue<T extends ReadonlyArray<Validator<any>>> = {
    [K in keyof T]: T[K] extends Validator<infer V> ? V : never;
};
export declare function tupleType<T extends readonly Validator<any>[]>(...types: T): Requireable<ExtractValue<T>>;
export declare const refType: PropTypes.Requireable<any>;
export {};

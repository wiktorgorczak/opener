{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _omit from \"lodash/omit\";\nimport _isFunction from \"lodash/isFunction\";\nimport _pick from \"lodash/pick\";\nimport _isNil from \"lodash/isNil\";\nimport React, { useState, useRef, useEffect, useCallback, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { List, AutoSizer } from '../Picker/VirtualizedList';\nimport CheckTreeNode from './CheckTreeNode';\nimport TreeContext from '../Tree/TreeContext';\nimport { getTreeNodeIndent } from '../utils/treeUtils';\nimport { createChainedFunction, useCustom, useClassNames, useControlled, KEY_VALUES, mergeRefs, shallowEqual } from '../utils';\nimport { PickerToggle, onMenuKeyDown as _onMenuKeyDown, PickerOverlay, SearchBar, SelectedElement, PickerToggleTrigger, createConcatChildrenFunction, usePickerClassName, usePublicMethods, pickTriggerPropKeys, omitTriggerPropKeys, listPickerPropTypes, useToggleKeyDownEvent } from '../Picker';\nimport { isEveryChildChecked, isSomeNodeHasChildren, isAllSiblingNodeUncheckable, isEveryFirstLevelNodeUncheckable, getFormattedTree, getDisabledState, getCheckTreePickerDefaultValue, getSelectedItems, isNodeUncheckable } from './utils';\nimport { hasVisibleChildren, getExpandWhenSearching, useTreeSearch, useTreeNodeRefs, getDefaultExpandItemValues, useFlattenTreeData, focusNextItem, getFocusableItems, focusPreviousItem, toggleExpand, getActiveItem, useGetTreeNodeChildren, focusToActiveTreeNode, focusTreeNode, leftArrowHandler, rightArrowHandler, isSearching } from '../utils/treeUtils';\nimport { maxTreeHeight } from '../TreePicker/TreePicker';\nvar emptyArray = [];\nvar CheckTreePicker = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      _props$data = props.data,\n      data = _props$data === void 0 ? emptyArray : _props$data,\n      style = props.style,\n      _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      _props$cleanable = props.cleanable,\n      cleanable = _props$cleanable === void 0 ? true : _props$cleanable,\n      _props$countable = props.countable,\n      countable = _props$countable === void 0 ? true : _props$countable,\n      searchBy = props.searchBy,\n      toggleAs = props.toggleAs,\n      searchKeyword = props.searchKeyword,\n      showIndentLine = props.showIndentLine,\n      overrideLocale = props.locale,\n      _props$cascade = props.cascade,\n      cascade = _props$cascade === void 0 ? true : _props$cascade,\n      disabled = props.disabled,\n      _props$valueKey = props.valueKey,\n      valueKey = _props$valueKey === void 0 ? 'value' : _props$valueKey,\n      _props$labelKey = props.labelKey,\n      labelKey = _props$labelKey === void 0 ? 'label' : _props$labelKey,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'bottomStart' : _props$placement,\n      _props$childrenKey = props.childrenKey,\n      childrenKey = _props$childrenKey === void 0 ? 'children' : _props$childrenKey,\n      placeholder = props.placeholder,\n      controlledValue = props.value,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? emptyArray : _props$defaultValue,\n      defaultExpandAll = props.defaultExpandAll,\n      _props$disabledItemVa = props.disabledItemValues,\n      disabledItemValues = _props$disabledItemVa === void 0 ? emptyArray : _props$disabledItemVa,\n      controlledExpandItemValues = props.expandItemValues,\n      defaultExpandItemValues = props.defaultExpandItemValues,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 360 : _props$height,\n      menuStyle = props.menuStyle,\n      _props$searchable = props.searchable,\n      searchable = _props$searchable === void 0 ? true : _props$searchable,\n      virtualized = props.virtualized,\n      className = props.className,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'picker' : _props$classPrefix,\n      menuClassName = props.menuClassName,\n      _props$menuAutoWidth = props.menuAutoWidth,\n      menuAutoWidth = _props$menuAutoWidth === void 0 ? true : _props$menuAutoWidth,\n      _props$uncheckableIte = props.uncheckableItemValues,\n      uncheckableItemValues = _props$uncheckableIte === void 0 ? emptyArray : _props$uncheckableIte,\n      id = props.id,\n      listProps = props.listProps,\n      renderMenu = props.renderMenu,\n      getChildren = props.getChildren,\n      renderExtraFooter = props.renderExtraFooter,\n      onEntered = props.onEntered,\n      onChange = props.onChange,\n      onClean = props.onClean,\n      onClose = props.onClose,\n      onExited = props.onExited,\n      onSearch = props.onSearch,\n      onSelect = props.onSelect,\n      onOpen = props.onOpen,\n      onScroll = props.onScroll,\n      onExpand = props.onExpand,\n      renderValue = props.renderValue,\n      renderTreeIcon = props.renderTreeIcon,\n      renderTreeNode = props.renderTreeNode,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"data\", \"style\", \"appearance\", \"cleanable\", \"countable\", \"searchBy\", \"toggleAs\", \"searchKeyword\", \"showIndentLine\", \"locale\", \"cascade\", \"disabled\", \"valueKey\", \"labelKey\", \"placement\", \"childrenKey\", \"placeholder\", \"value\", \"defaultValue\", \"defaultExpandAll\", \"disabledItemValues\", \"expandItemValues\", \"defaultExpandItemValues\", \"height\", \"menuStyle\", \"searchable\", \"virtualized\", \"className\", \"classPrefix\", \"menuClassName\", \"menuAutoWidth\", \"uncheckableItemValues\", \"id\", \"listProps\", \"renderMenu\", \"getChildren\", \"renderExtraFooter\", \"onEntered\", \"onChange\", \"onClean\", \"onClose\", \"onExited\", \"onSearch\", \"onSelect\", \"onOpen\", \"onScroll\", \"onExpand\", \"renderValue\", \"renderTreeIcon\", \"renderTreeNode\"]);\n\n  var _useContext = useContext(TreeContext),\n      inline = _useContext.inline;\n\n  var triggerRef = useRef(null);\n  var targetRef = useRef(null);\n  var listRef = useRef(null);\n  var overlayRef = useRef(null);\n  var searchInputRef = useRef(null);\n  var treeViewRef = useRef(null);\n\n  var _useCustom = useCustom('Picker', overrideLocale),\n      rtl = _useCustom.rtl,\n      locale = _useCustom.locale;\n\n  var _useState = useState(false),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var _useState2 = useState(null),\n      activeNode = _useState2[0],\n      setActiveNode = _useState2[1];\n\n  var _useClassNames = useClassNames(classPrefix),\n      prefix = _useClassNames.prefix,\n      merge = _useClassNames.merge;\n\n  var _useClassNames2 = useClassNames('check-tree'),\n      checkTreePrefix = _useClassNames2.prefix,\n      withCheckTreeClassPrefix = _useClassNames2.withClassPrefix;\n\n  var _useControlled = useControlled(controlledValue, defaultValue),\n      value = _useControlled[0],\n      setValue = _useControlled[1],\n      isControlled = _useControlled[2];\n\n  var _useGetTreeNodeChildr = useGetTreeNodeChildren(data, valueKey, childrenKey),\n      treeData = _useGetTreeNodeChildr.data,\n      setTreeData = _useGetTreeNodeChildr.setData,\n      loadingNodeValues = _useGetTreeNodeChildr.loadingNodeValues,\n      loadChildren = _useGetTreeNodeChildr.loadChildren;\n\n  var _useControlled2 = useControlled(controlledExpandItemValues, getDefaultExpandItemValues(treeData, {\n    defaultExpandAll: defaultExpandAll,\n    valueKey: valueKey,\n    childrenKey: childrenKey,\n    defaultExpandItemValues: defaultExpandItemValues\n  })),\n      expandItemValues = _useControlled2[0],\n      setExpandItemValues = _useControlled2[1];\n\n  var _useState3 = useState(null),\n      focusItemValue = _useState3[0],\n      setFocusItemValue = _useState3[1];\n\n  var _useFlattenTreeData = useFlattenTreeData({\n    data: treeData,\n    labelKey: labelKey,\n    valueKey: valueKey,\n    childrenKey: childrenKey,\n    uncheckableItemValues: uncheckableItemValues,\n    callback: function callback(nodes) {\n      // after flattenData, always unSerialize check property value\n      unSerializeList({\n        nodes: nodes,\n        key: 'check',\n        value: value,\n        cascade: cascade,\n        uncheckableItemValues: uncheckableItemValues\n      });\n      forceUpdate();\n    }\n  }),\n      flattenNodes = _useFlattenTreeData.flattenNodes,\n      forceUpdate = _useFlattenTreeData.forceUpdate,\n      formatVirtualizedTreeData = _useFlattenTreeData.formatVirtualizedTreeData,\n      serializeListOnlyParent = _useFlattenTreeData.serializeListOnlyParent,\n      unSerializeList = _useFlattenTreeData.unSerializeList;\n\n  var _useTreeSearch = useTreeSearch({\n    labelKey: labelKey,\n    childrenKey: childrenKey,\n    searchKeyword: searchKeyword,\n    data: treeData,\n    searchBy: searchBy,\n    callback: function callback(searchKeyword, _filterData, event) {\n      onSearch === null || onSearch === void 0 ? void 0 : onSearch(searchKeyword, event);\n    }\n  }),\n      filteredData = _useTreeSearch.filteredData,\n      searchKeywordState = _useTreeSearch.searchKeywordState,\n      setSearchKeyword = _useTreeSearch.setSearchKeyword,\n      handleSearch = _useTreeSearch.handleSearch,\n      setFilteredData = _useTreeSearch.setFilteredData;\n\n  var _useTreeNodeRefs = useTreeNodeRefs(),\n      treeNodesRefs = _useTreeNodeRefs.treeNodesRefs,\n      saveTreeNodeRef = _useTreeNodeRefs.saveTreeNodeRef;\n  /**\n   * get formatted nodes for render tree\n   * @params render - renderNode function. only used when virtualized setting false\n   */\n\n\n  var getFormattedNodes = useCallback(function (render) {\n    if (virtualized) {\n      return formatVirtualizedTreeData(flattenNodes, filteredData, expandItemValues, {\n        cascade: cascade,\n        searchKeyword: searchKeywordState\n      }).filter(function (item) {\n        return item.visible;\n      });\n    }\n\n    return getFormattedTree(filteredData, flattenNodes, {\n      childrenKey: childrenKey,\n      cascade: cascade\n    }).map(function (node) {\n      return render === null || render === void 0 ? void 0 : render(node, 1);\n    });\n  }, [searchKeywordState, expandItemValues, filteredData, flattenNodes, formatVirtualizedTreeData, virtualized, childrenKey, cascade]);\n\n  var getTreeNodeProps = function getTreeNodeProps(node, layer) {\n    return {\n      as: Component,\n      rtl: rtl,\n      value: node[valueKey],\n      label: node[labelKey],\n      layer: layer,\n      focus: shallowEqual(focusItemValue, node[valueKey]),\n      expand: node.expand,\n      visible: node.visible,\n      loading: loadingNodeValues.some(function (item) {\n        return shallowEqual(item, node[valueKey]);\n      }),\n      disabled: getDisabledState(flattenNodes, node, {\n        disabledItemValues: disabledItemValues,\n        valueKey: valueKey\n      }),\n      nodeData: node,\n      checkState: node.checkState,\n      uncheckable: isNodeUncheckable(node, {\n        uncheckableItemValues: uncheckableItemValues,\n        valueKey: valueKey\n      }),\n      allUncheckable: isAllSiblingNodeUncheckable(node, flattenNodes, uncheckableItemValues, valueKey),\n      onSelect: handleSelect,\n      onExpand: handleExpand,\n      onRenderTreeNode: renderTreeNode,\n      onRenderTreeIcon: renderTreeIcon\n    };\n  };\n\n  var focusActiveNode = useCallback(function () {\n    focusToActiveTreeNode({\n      list: listRef.current,\n      valueKey: valueKey,\n      selector: \".\" + checkTreePrefix('node-active'),\n      activeNode: activeNode,\n      virtualized: virtualized,\n      container: treeViewRef.current,\n      formattedNodes: getFormattedNodes()\n    });\n  }, [checkTreePrefix, activeNode, getFormattedNodes, valueKey, virtualized]);\n  useEffect(function () {\n    setValue(getCheckTreePickerDefaultValue(value, uncheckableItemValues));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setFilteredData(data, searchKeywordState);\n    setTreeData(data);\n  }, [data, searchKeywordState, setFilteredData, setTreeData]);\n  useEffect(function () {\n    setFilteredData(treeData, searchKeywordState);\n  }, [treeData, searchKeywordState, setFilteredData]);\n  useEffect(function () {\n    if (Array.isArray(controlledExpandItemValues)) {\n      setExpandItemValues(controlledExpandItemValues);\n    }\n  }, [controlledExpandItemValues, setExpandItemValues]);\n  useEffect(function () {\n    setSearchKeyword(searchKeyword !== null && searchKeyword !== void 0 ? searchKeyword : '');\n  }, [searchKeyword, setSearchKeyword]);\n  useEffect(function () {\n    unSerializeList({\n      nodes: flattenNodes,\n      key: 'check',\n      value: value,\n      cascade: cascade,\n      uncheckableItemValues: uncheckableItemValues\n    });\n    forceUpdate();\n  }, [cascade, value, uncheckableItemValues, unSerializeList, flattenNodes, forceUpdate]);\n  var toggleUpChecked = useCallback(function (nodes, node, checked) {\n    var currentNode = nodes[node.refKey];\n\n    if (cascade) {\n      if (!checked) {\n        currentNode.check = checked;\n        currentNode.checkAll = checked;\n      } else {\n        if (isEveryChildChecked(nodes, currentNode)) {\n          currentNode.check = true;\n          currentNode.checkAll = true;\n        } else {\n          currentNode.check = false;\n          currentNode.checkAll = false;\n        }\n      }\n\n      if (currentNode.parent) {\n        toggleUpChecked(nodes, currentNode.parent, checked);\n      }\n    }\n  }, [cascade]);\n  var toggleDownChecked = useCallback(function (nodes, node, isChecked) {\n    var currentNode = nodes[node.refKey];\n    currentNode.check = isChecked;\n\n    if (!currentNode[childrenKey] || !currentNode[childrenKey].length || !cascade) {\n      currentNode.checkAll = false;\n    } else {\n      currentNode.checkAll = isChecked;\n      currentNode[childrenKey].forEach(function (child) {\n        toggleDownChecked(nodes, child, isChecked);\n      });\n    }\n  }, [cascade, childrenKey]);\n  var toggleChecked = useCallback(function (node, isChecked) {\n    var nodes = _cloneDeep(flattenNodes);\n\n    toggleDownChecked(nodes, node, isChecked);\n    node.parent && toggleUpChecked(nodes, node.parent, isChecked);\n    var values = serializeListOnlyParent(nodes, 'check'); // filter uncheckableItemValues\n\n    return values.filter(function (v) {\n      return !uncheckableItemValues.includes(v);\n    });\n  }, [flattenNodes, uncheckableItemValues, serializeListOnlyParent, toggleDownChecked, toggleUpChecked]);\n  var handleSelect = useCallback(function (node, event) {\n    if (!node) {\n      return;\n    }\n\n    var selectedValues = toggleChecked(node, !flattenNodes[node.refKey].check);\n\n    if (!isControlled) {\n      unSerializeList({\n        nodes: flattenNodes,\n        key: 'check',\n        value: selectedValues,\n        cascade: cascade,\n        uncheckableItemValues: uncheckableItemValues\n      });\n      setValue(selectedValues);\n    }\n\n    setActiveNode(node);\n    setFocusItemValue(node[valueKey]);\n    onChange === null || onChange === void 0 ? void 0 : onChange(selectedValues, event);\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(node, selectedValues, event);\n  }, [cascade, valueKey, flattenNodes, isControlled, uncheckableItemValues, setValue, onChange, onSelect, toggleChecked, unSerializeList]);\n\n  var hasValue = function hasValue() {\n    var selectedValues = Object.keys(flattenNodes).map(function (refKey) {\n      return flattenNodes[refKey][valueKey];\n    }).filter(function (item) {\n      return value.some(function (v) {\n        return shallowEqual(v, item);\n      });\n    });\n    return !!selectedValues.length;\n  };\n\n  var handleOpen = useCallback(function () {\n    var _triggerRef$current, _triggerRef$current$o;\n\n    (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : (_triggerRef$current$o = _triggerRef$current.open) === null || _triggerRef$current$o === void 0 ? void 0 : _triggerRef$current$o.call(_triggerRef$current);\n    setFocusItemValue(activeNode === null || activeNode === void 0 ? void 0 : activeNode[valueKey]);\n    focusActiveNode();\n    onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n    setActive(true);\n  }, [activeNode, focusActiveNode, onOpen, valueKey]);\n  var handleClose = useCallback(function () {\n    var _triggerRef$current2, _triggerRef$current2$, _targetRef$current;\n\n    (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : (_triggerRef$current2$ = _triggerRef$current2.close) === null || _triggerRef$current2$ === void 0 ? void 0 : _triggerRef$current2$.call(_triggerRef$current2);\n    setSearchKeyword('');\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n    setFocusItemValue(null);\n    setActive(false);\n    /**\n     * when using keyboard toggle picker, should refocus on PickerToggle Component after close picker menu\n     */\n\n    (_targetRef$current = targetRef.current) === null || _targetRef$current === void 0 ? void 0 : _targetRef$current.focus();\n  }, [onClose, setSearchKeyword]);\n  var handleExpand = useCallback(function (node) {\n    var nextExpandItemValues = toggleExpand({\n      node: node,\n      isExpand: !node.expand,\n      expandItemValues: expandItemValues,\n      valueKey: valueKey\n    });\n    setExpandItemValues(nextExpandItemValues);\n    onExpand === null || onExpand === void 0 ? void 0 : onExpand(nextExpandItemValues, node, createConcatChildrenFunction(node, node[valueKey], {\n      valueKey: valueKey,\n      childrenKey: childrenKey\n    }));\n\n    if (_isFunction(getChildren) && !node.expand && Array.isArray(node[childrenKey]) && node[childrenKey].length === 0) {\n      loadChildren(node, getChildren);\n    }\n  }, [childrenKey, expandItemValues, getChildren, loadChildren, onExpand, setExpandItemValues, valueKey]);\n  usePublicMethods(ref, {\n    rootRef: inline ? treeViewRef : undefined,\n    triggerRef: triggerRef,\n    overlayRef: overlayRef,\n    targetRef: targetRef,\n    listRef: listRef,\n    inline: inline\n  });\n  var handleClean = useCallback(function (event) {\n    var target = event.target; // exclude searchBar\n\n    if (target.matches('div[role=\"searchbox\"] > input')) {\n      return;\n    }\n\n    setActiveNode(null);\n    setValue([]);\n    setFocusItemValue(null);\n    unSerializeList({\n      nodes: flattenNodes,\n      key: 'check',\n      value: [],\n      cascade: cascade,\n      uncheckableItemValues: uncheckableItemValues\n    });\n    onChange === null || onChange === void 0 ? void 0 : onChange([], event);\n  }, [cascade, flattenNodes, onChange, setValue, unSerializeList, uncheckableItemValues]);\n  var handleFocusItem = useCallback(function (key) {\n    var focusableItems = getFocusableItems(filteredData, {\n      disabledItemValues: disabledItemValues,\n      valueKey: valueKey,\n      childrenKey: childrenKey,\n      expandItemValues: expandItemValues\n    }, isSearching(searchKeywordState));\n    var selector = \".\" + checkTreePrefix('node-label');\n    var focusProps = {\n      focusItemValue: focusItemValue,\n      focusableItems: focusableItems,\n      treeNodesRefs: treeNodesRefs,\n      selector: selector,\n      valueKey: valueKey,\n      callback: function callback(nextFocusItemValue) {\n        setFocusItemValue(nextFocusItemValue);\n      }\n    };\n\n    if (key === KEY_VALUES.DOWN) {\n      focusNextItem(focusProps);\n      return;\n    }\n\n    if (key === KEY_VALUES.UP) {\n      focusPreviousItem(focusProps);\n    }\n  }, [searchKeywordState, checkTreePrefix, expandItemValues, filteredData, focusItemValue, treeNodesRefs, childrenKey, valueKey, disabledItemValues]);\n  var handleLeftArrow = useCallback(function () {\n    if (_isNil(focusItemValue)) return;\n    var focusItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n    leftArrowHandler({\n      focusItem: focusItem,\n      expand: expandItemValues.includes(focusItem === null || focusItem === void 0 ? void 0 : focusItem[valueKey]),\n      onExpand: handleExpand,\n      childrenKey: childrenKey,\n      onFocusItem: function onFocusItem() {\n        var _focusItem$parent, _focusItem$parent2;\n\n        setFocusItemValue(focusItem === null || focusItem === void 0 ? void 0 : (_focusItem$parent = focusItem.parent) === null || _focusItem$parent === void 0 ? void 0 : _focusItem$parent[valueKey]);\n        focusTreeNode(focusItem === null || focusItem === void 0 ? void 0 : (_focusItem$parent2 = focusItem.parent) === null || _focusItem$parent2 === void 0 ? void 0 : _focusItem$parent2.refKey, treeNodesRefs, \".\" + checkTreePrefix('node-label'));\n      }\n    });\n  }, [checkTreePrefix, expandItemValues, flattenNodes, focusItemValue, handleExpand, treeNodesRefs, valueKey, childrenKey]);\n  var handleRightArrow = useCallback(function () {\n    if (_isNil(focusItemValue)) return;\n    var focusItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n    rightArrowHandler({\n      focusItem: focusItem,\n      expand: expandItemValues.includes(focusItem === null || focusItem === void 0 ? void 0 : focusItem[valueKey]),\n      childrenKey: childrenKey,\n      onExpand: handleExpand,\n      onFocusItem: function onFocusItem() {\n        handleFocusItem(KEY_VALUES.DOWN);\n      }\n    });\n  }, [focusItemValue, flattenNodes, valueKey, expandItemValues, childrenKey, handleExpand, handleFocusItem]);\n  var selectActiveItem = useCallback(function (event) {\n    if (_isNil(focusItemValue)) return;\n    var activeItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n\n    if (!isNodeUncheckable(activeItem, {\n      uncheckableItemValues: uncheckableItemValues,\n      valueKey: valueKey\n    }) && activeItem !== null) {\n      handleSelect(activeItem, event);\n    }\n  }, [flattenNodes, focusItemValue, handleSelect, uncheckableItemValues, valueKey]);\n  var onPickerKeydown = useToggleKeyDownEvent({\n    toggle: !focusItemValue || !active,\n    triggerRef: triggerRef,\n    targetRef: targetRef,\n    overlayRef: overlayRef,\n    searchInputRef: searchInputRef,\n    active: active,\n    onExit: handleClean,\n    onClose: handleClose,\n    onMenuKeyDown: function onMenuKeyDown(event) {\n      _onMenuKeyDown(event, {\n        down: function down() {\n          return handleFocusItem(KEY_VALUES.DOWN);\n        },\n        up: function up() {\n          return handleFocusItem(KEY_VALUES.UP);\n        },\n        left: rtl ? handleRightArrow : handleLeftArrow,\n        right: rtl ? handleLeftArrow : handleRightArrow,\n        enter: selectActiveItem,\n        del: handleClean\n      });\n    }\n  });\n  var handleTreeKeydown = useCallback(function (event) {\n    if (!treeViewRef.current) {\n      return;\n    }\n\n    _onMenuKeyDown(event, {\n      down: function down() {\n        return handleFocusItem(KEY_VALUES.DOWN);\n      },\n      up: function up() {\n        return handleFocusItem(KEY_VALUES.UP);\n      },\n      left: rtl ? handleRightArrow : handleLeftArrow,\n      right: rtl ? handleLeftArrow : handleRightArrow,\n      enter: selectActiveItem\n    });\n  }, [handleFocusItem, handleLeftArrow, handleRightArrow, rtl, selectActiveItem]);\n\n  var renderNode = function renderNode(node, layer) {\n    var visible = node.visible,\n        refKey = node.refKey; // when searching, all nodes should be expand\n\n    var expand = getExpandWhenSearching(searchKeywordState, expandItemValues.includes(node[valueKey]));\n\n    if (!visible) {\n      return null;\n    }\n\n    var children = node[childrenKey];\n    var visibleChildren = _isUndefined(searchKeywordState) || searchKeywordState.length === 0 ? !!children : hasVisibleChildren(node, childrenKey);\n\n    var nodeProps = _extends({}, getTreeNodeProps(_extends({}, node, {\n      expand: expand\n    }), layer), {\n      hasChildren: visibleChildren\n    });\n\n    if (nodeProps.hasChildren) {\n      var _merge;\n\n      layer += 1;\n      var openClass = checkTreePrefix('open');\n      var childrenClass = merge(checkTreePrefix('node-children'), (_merge = {}, _merge[openClass] = expand && visibleChildren, _merge));\n      var nodes = children || [];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: childrenClass,\n        key: node[valueKey]\n      }, /*#__PURE__*/React.createElement(CheckTreeNode, _extends({}, nodeProps, {\n        ref: function ref(_ref) {\n          return saveTreeNodeRef(_ref, refKey);\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: checkTreePrefix('children')\n      }, nodes.map(function (child) {\n        return renderNode(child, layer);\n      }), showIndentLine && /*#__PURE__*/React.createElement(\"span\", {\n        className: checkTreePrefix('indent-line'),\n        style: getTreeNodeIndent(rtl, layer - 1, true)\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(CheckTreeNode, _extends({\n      key: node[valueKey],\n      ref: function ref(_ref2) {\n        return saveTreeNodeRef(_ref2, refKey);\n      }\n    }, nodeProps));\n  };\n\n  var renderVirtualListNode = function renderVirtualListNode(nodes) {\n    return function (_ref3) {\n      var key = _ref3.key,\n          index = _ref3.index,\n          style = _ref3.style;\n      var node = nodes[index];\n      var layer = node.layer,\n          refKey = node.refKey,\n          visible = node.visible;\n      var expand = getExpandWhenSearching(searchKeywordState, expandItemValues.includes(node[valueKey]));\n\n      var nodeProps = _extends({}, getTreeNodeProps(_extends({}, node, {\n        expand: expand\n      }), layer), {\n        hasChildren: node.hasChildren\n      });\n\n      return visible && /*#__PURE__*/React.createElement(CheckTreeNode, _extends({\n        style: style,\n        key: key,\n        ref: function ref(_ref4) {\n          return saveTreeNodeRef(_ref4, refKey);\n        }\n      }, nodeProps));\n    };\n  };\n\n  var renderCheckTree = function renderCheckTree() {\n    var _withCheckTreeClassPr, _merge2;\n\n    var classes = withCheckTreeClassPrefix((_withCheckTreeClassPr = {}, _withCheckTreeClassPr[className !== null && className !== void 0 ? className : ''] = inline, _withCheckTreeClassPr['without-children'] = !isSomeNodeHasChildren, _withCheckTreeClassPr.virtualized = virtualized, _withCheckTreeClassPr));\n    var formattedNodes = getFormattedNodes(renderNode);\n\n    if (!formattedNodes.some(function (v) {\n      return v !== null;\n    })) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('none')\n      }, locale.noResultsText);\n    }\n\n    var treeNodesClass = merge(checkTreePrefix('nodes'), (_merge2 = {}, _merge2[checkTreePrefix('all-uncheckable')] = isEveryFirstLevelNodeUncheckable(flattenNodes, uncheckableItemValues, valueKey), _merge2));\n    var styles = inline ? _extends({\n      height: height\n    }, style) : {};\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: id ? id + \"-listbox\" : undefined,\n      ref: treeViewRef,\n      role: \"tree\",\n      \"aria-multiselectable\": true,\n      className: classes,\n      style: styles,\n      onScroll: onScroll,\n      onKeyDown: inline ? handleTreeKeydown : undefined\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: treeNodesClass\n    }, virtualized ? /*#__PURE__*/React.createElement(AutoSizer, {\n      defaultHeight: inline ? height : maxTreeHeight,\n      style: {\n        width: 'auto',\n        height: 'auto'\n      }\n    }, function (_ref5) {\n      var height = _ref5.height,\n          width = _ref5.width;\n      return /*#__PURE__*/React.createElement(List, _extends({\n        ref: listRef,\n        width: width,\n        height: height,\n        rowHeight: 36,\n        rowCount: formattedNodes.length,\n        rowRenderer: renderVirtualListNode(formattedNodes),\n        scrollToAlignment: \"center\"\n      }, listProps));\n    }) : formattedNodes));\n  };\n\n  var renderDropdownMenu = function renderDropdownMenu(positionProps, speakerRef) {\n    var left = positionProps.left,\n        top = positionProps.top,\n        className = positionProps.className;\n    var classes = classNames(className, menuClassName, prefix('check-tree-menu'));\n\n    var mergedMenuStyle = _extends({}, menuStyle, {\n      left: left,\n      top: top\n    });\n\n    var styles = virtualized ? _extends({\n      height: height\n    }, mergedMenuStyle) : _extends({}, mergedMenuStyle);\n    return /*#__PURE__*/React.createElement(PickerOverlay, {\n      autoWidth: menuAutoWidth,\n      className: classes,\n      style: styles,\n      ref: mergeRefs(overlayRef, speakerRef),\n      onKeyDown: onPickerKeydown,\n      target: triggerRef\n    }, searchable ? /*#__PURE__*/React.createElement(SearchBar, {\n      placeholder: locale.searchPlaceholder,\n      onChange: handleSearch,\n      value: searchKeywordState,\n      inputRef: searchInputRef\n    }) : null, renderMenu ? renderMenu(renderCheckTree()) : renderCheckTree(), renderExtraFooter === null || renderExtraFooter === void 0 ? void 0 : renderExtraFooter());\n  };\n  /**\n   * 1.Have a value and the value is valid.\n   * 2.Regardless of whether the value is valid, as long as renderValue is set, it is judged to have a value.\n   */\n\n\n  var hasValidValue = hasValue() || value.length > 0 && _isFunction(renderValue);\n\n  var selectedElement = placeholder;\n  var selectedItems = getSelectedItems(flattenNodes, value, valueKey);\n\n  if (hasValidValue) {\n    selectedElement = /*#__PURE__*/React.createElement(SelectedElement, {\n      selectedItems: selectedItems,\n      countable: countable,\n      valueKey: valueKey,\n      labelKey: labelKey,\n      childrenKey: childrenKey,\n      prefix: prefix,\n      cascade: cascade,\n      locale: locale\n    });\n\n    if (_isFunction(renderValue)) {\n      selectedElement = renderValue(value, selectedItems, selectedElement);\n\n      if (_isNil(selectedElement)) {\n        hasValidValue = false;\n      }\n    }\n  }\n\n  var _usePickerClassName = usePickerClassName(_extends({}, props, {\n    classPrefix: classPrefix,\n    appearance: appearance,\n    countable: countable,\n    cleanable: cleanable,\n    disabled: disabled,\n    hasValue: hasValidValue,\n    name: 'check-tree'\n  })),\n      classes = _usePickerClassName[0],\n      usedClassNamePropKeys = _usePickerClassName[1];\n\n  if (inline) {\n    return renderCheckTree();\n  }\n\n  return /*#__PURE__*/React.createElement(PickerToggleTrigger, {\n    pickerProps: _pick(props, pickTriggerPropKeys),\n    ref: triggerRef,\n    placement: placement,\n    onEnter: handleOpen,\n    onEntered: onEntered,\n    onExited: createChainedFunction(handleClose, onExited),\n    speaker: renderDropdownMenu\n  }, /*#__PURE__*/React.createElement(Component, {\n    className: classes,\n    style: style\n  }, /*#__PURE__*/React.createElement(PickerToggle, _extends({}, _omit(rest, [].concat(omitTriggerPropKeys, usedClassNamePropKeys)), {\n    id: id,\n    ref: targetRef,\n    appearance: appearance,\n    onKeyDown: onPickerKeydown,\n    onClean: createChainedFunction(handleClean, onClean),\n    cleanable: cleanable && !disabled,\n    disabled: disabled,\n    as: toggleAs,\n    hasValue: hasValidValue,\n    active: active,\n    placement: placement,\n    inputValue: value\n  }), selectedElement || locale.placeholder)));\n});\nCheckTreePicker.displayName = 'CheckTreePicker';\nCheckTreePicker.propTypes = _extends({}, listPickerPropTypes, {\n  height: PropTypes.number,\n  appearance: PropTypes.oneOf(['default', 'subtle']),\n  locale: PropTypes.any,\n  cascade: PropTypes.bool,\n  countable: PropTypes.bool,\n  searchable: PropTypes.bool,\n  virtualized: PropTypes.bool,\n  searchKeyword: PropTypes.string,\n  menuAutoWidth: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  containerPadding: PropTypes.number,\n  disabledItemValues: PropTypes.array,\n  expandItemValues: PropTypes.array,\n  defaultExpandItemValues: PropTypes.array,\n  uncheckableItemValues: PropTypes.array,\n  onSearch: PropTypes.func,\n  onExpand: PropTypes.func,\n  onSelect: PropTypes.func,\n  renderMenu: PropTypes.func,\n  renderTreeNode: PropTypes.func,\n  renderTreeIcon: PropTypes.func,\n  searchBy: PropTypes.func,\n  onScroll: PropTypes.func\n});\nexport default CheckTreePicker;","map":{"version":3,"sources":["/Users/pango/Documents/Open/opener/frontend/node_modules/rsuite/esm/CheckTreePicker/CheckTreePicker.js"],"names":["_extends","_objectWithoutPropertiesLoose","_isUndefined","_cloneDeep","_omit","_isFunction","_pick","_isNil","React","useState","useRef","useEffect","useCallback","useContext","PropTypes","classNames","List","AutoSizer","CheckTreeNode","TreeContext","getTreeNodeIndent","createChainedFunction","useCustom","useClassNames","useControlled","KEY_VALUES","mergeRefs","shallowEqual","PickerToggle","onMenuKeyDown","_onMenuKeyDown","PickerOverlay","SearchBar","SelectedElement","PickerToggleTrigger","createConcatChildrenFunction","usePickerClassName","usePublicMethods","pickTriggerPropKeys","omitTriggerPropKeys","listPickerPropTypes","useToggleKeyDownEvent","isEveryChildChecked","isSomeNodeHasChildren","isAllSiblingNodeUncheckable","isEveryFirstLevelNodeUncheckable","getFormattedTree","getDisabledState","getCheckTreePickerDefaultValue","getSelectedItems","isNodeUncheckable","hasVisibleChildren","getExpandWhenSearching","useTreeSearch","useTreeNodeRefs","getDefaultExpandItemValues","useFlattenTreeData","focusNextItem","getFocusableItems","focusPreviousItem","toggleExpand","getActiveItem","useGetTreeNodeChildren","focusToActiveTreeNode","focusTreeNode","leftArrowHandler","rightArrowHandler","isSearching","maxTreeHeight","emptyArray","CheckTreePicker","forwardRef","props","ref","_props$as","as","Component","_props$data","data","style","_props$appearance","appearance","_props$cleanable","cleanable","_props$countable","countable","searchBy","toggleAs","searchKeyword","showIndentLine","overrideLocale","locale","_props$cascade","cascade","disabled","_props$valueKey","valueKey","_props$labelKey","labelKey","_props$placement","placement","_props$childrenKey","childrenKey","placeholder","controlledValue","value","_props$defaultValue","defaultValue","defaultExpandAll","_props$disabledItemVa","disabledItemValues","controlledExpandItemValues","expandItemValues","defaultExpandItemValues","_props$height","height","menuStyle","_props$searchable","searchable","virtualized","className","_props$classPrefix","classPrefix","menuClassName","_props$menuAutoWidth","menuAutoWidth","_props$uncheckableIte","uncheckableItemValues","id","listProps","renderMenu","getChildren","renderExtraFooter","onEntered","onChange","onClean","onClose","onExited","onSearch","onSelect","onOpen","onScroll","onExpand","renderValue","renderTreeIcon","renderTreeNode","rest","_useContext","inline","triggerRef","targetRef","listRef","overlayRef","searchInputRef","treeViewRef","_useCustom","rtl","_useState","active","setActive","_useState2","activeNode","setActiveNode","_useClassNames","prefix","merge","_useClassNames2","checkTreePrefix","withCheckTreeClassPrefix","withClassPrefix","_useControlled","setValue","isControlled","_useGetTreeNodeChildr","treeData","setTreeData","setData","loadingNodeValues","loadChildren","_useControlled2","setExpandItemValues","_useState3","focusItemValue","setFocusItemValue","_useFlattenTreeData","callback","nodes","unSerializeList","key","forceUpdate","flattenNodes","formatVirtualizedTreeData","serializeListOnlyParent","_useTreeSearch","_filterData","event","filteredData","searchKeywordState","setSearchKeyword","handleSearch","setFilteredData","_useTreeNodeRefs","treeNodesRefs","saveTreeNodeRef","getFormattedNodes","render","filter","item","visible","map","node","getTreeNodeProps","layer","label","focus","expand","loading","some","nodeData","checkState","uncheckable","allUncheckable","handleSelect","handleExpand","onRenderTreeNode","onRenderTreeIcon","focusActiveNode","list","current","selector","container","formattedNodes","Array","isArray","toggleUpChecked","checked","currentNode","refKey","check","checkAll","parent","toggleDownChecked","isChecked","length","forEach","child","toggleChecked","values","v","includes","selectedValues","hasValue","Object","keys","handleOpen","_triggerRef$current","_triggerRef$current$o","open","call","handleClose","_triggerRef$current2","_triggerRef$current2$","_targetRef$current","close","nextExpandItemValues","isExpand","rootRef","undefined","handleClean","target","matches","handleFocusItem","focusableItems","focusProps","nextFocusItemValue","DOWN","UP","handleLeftArrow","focusItem","onFocusItem","_focusItem$parent","_focusItem$parent2","handleRightArrow","selectActiveItem","activeItem","onPickerKeydown","toggle","onExit","down","up","left","right","enter","del","handleTreeKeydown","renderNode","children","visibleChildren","nodeProps","hasChildren","_merge","openClass","childrenClass","createElement","_ref","_ref2","renderVirtualListNode","_ref3","index","_ref4","renderCheckTree","_withCheckTreeClassPr","_merge2","classes","noResultsText","treeNodesClass","styles","role","onKeyDown","defaultHeight","width","_ref5","rowHeight","rowCount","rowRenderer","scrollToAlignment","renderDropdownMenu","positionProps","speakerRef","top","mergedMenuStyle","autoWidth","searchPlaceholder","inputRef","hasValidValue","selectedElement","selectedItems","_usePickerClassName","name","usedClassNamePropKeys","pickerProps","onEnter","speaker","concat","inputValue","displayName","propTypes","number","oneOf","any","bool","string","containerPadding","array","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _omit from \"lodash/omit\";\nimport _isFunction from \"lodash/isFunction\";\nimport _pick from \"lodash/pick\";\nimport _isNil from \"lodash/isNil\";\nimport React, { useState, useRef, useEffect, useCallback, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { List, AutoSizer } from '../Picker/VirtualizedList';\nimport CheckTreeNode from './CheckTreeNode';\nimport TreeContext from '../Tree/TreeContext';\nimport { getTreeNodeIndent } from '../utils/treeUtils';\nimport { createChainedFunction, useCustom, useClassNames, useControlled, KEY_VALUES, mergeRefs, shallowEqual } from '../utils';\nimport { PickerToggle, onMenuKeyDown as _onMenuKeyDown, PickerOverlay, SearchBar, SelectedElement, PickerToggleTrigger, createConcatChildrenFunction, usePickerClassName, usePublicMethods, pickTriggerPropKeys, omitTriggerPropKeys, listPickerPropTypes, useToggleKeyDownEvent } from '../Picker';\nimport { isEveryChildChecked, isSomeNodeHasChildren, isAllSiblingNodeUncheckable, isEveryFirstLevelNodeUncheckable, getFormattedTree, getDisabledState, getCheckTreePickerDefaultValue, getSelectedItems, isNodeUncheckable } from './utils';\nimport { hasVisibleChildren, getExpandWhenSearching, useTreeSearch, useTreeNodeRefs, getDefaultExpandItemValues, useFlattenTreeData, focusNextItem, getFocusableItems, focusPreviousItem, toggleExpand, getActiveItem, useGetTreeNodeChildren, focusToActiveTreeNode, focusTreeNode, leftArrowHandler, rightArrowHandler, isSearching } from '../utils/treeUtils';\nimport { maxTreeHeight } from '../TreePicker/TreePicker';\nvar emptyArray = [];\nvar CheckTreePicker = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      _props$data = props.data,\n      data = _props$data === void 0 ? emptyArray : _props$data,\n      style = props.style,\n      _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      _props$cleanable = props.cleanable,\n      cleanable = _props$cleanable === void 0 ? true : _props$cleanable,\n      _props$countable = props.countable,\n      countable = _props$countable === void 0 ? true : _props$countable,\n      searchBy = props.searchBy,\n      toggleAs = props.toggleAs,\n      searchKeyword = props.searchKeyword,\n      showIndentLine = props.showIndentLine,\n      overrideLocale = props.locale,\n      _props$cascade = props.cascade,\n      cascade = _props$cascade === void 0 ? true : _props$cascade,\n      disabled = props.disabled,\n      _props$valueKey = props.valueKey,\n      valueKey = _props$valueKey === void 0 ? 'value' : _props$valueKey,\n      _props$labelKey = props.labelKey,\n      labelKey = _props$labelKey === void 0 ? 'label' : _props$labelKey,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'bottomStart' : _props$placement,\n      _props$childrenKey = props.childrenKey,\n      childrenKey = _props$childrenKey === void 0 ? 'children' : _props$childrenKey,\n      placeholder = props.placeholder,\n      controlledValue = props.value,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? emptyArray : _props$defaultValue,\n      defaultExpandAll = props.defaultExpandAll,\n      _props$disabledItemVa = props.disabledItemValues,\n      disabledItemValues = _props$disabledItemVa === void 0 ? emptyArray : _props$disabledItemVa,\n      controlledExpandItemValues = props.expandItemValues,\n      defaultExpandItemValues = props.defaultExpandItemValues,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 360 : _props$height,\n      menuStyle = props.menuStyle,\n      _props$searchable = props.searchable,\n      searchable = _props$searchable === void 0 ? true : _props$searchable,\n      virtualized = props.virtualized,\n      className = props.className,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'picker' : _props$classPrefix,\n      menuClassName = props.menuClassName,\n      _props$menuAutoWidth = props.menuAutoWidth,\n      menuAutoWidth = _props$menuAutoWidth === void 0 ? true : _props$menuAutoWidth,\n      _props$uncheckableIte = props.uncheckableItemValues,\n      uncheckableItemValues = _props$uncheckableIte === void 0 ? emptyArray : _props$uncheckableIte,\n      id = props.id,\n      listProps = props.listProps,\n      renderMenu = props.renderMenu,\n      getChildren = props.getChildren,\n      renderExtraFooter = props.renderExtraFooter,\n      onEntered = props.onEntered,\n      onChange = props.onChange,\n      onClean = props.onClean,\n      onClose = props.onClose,\n      onExited = props.onExited,\n      onSearch = props.onSearch,\n      onSelect = props.onSelect,\n      onOpen = props.onOpen,\n      onScroll = props.onScroll,\n      onExpand = props.onExpand,\n      renderValue = props.renderValue,\n      renderTreeIcon = props.renderTreeIcon,\n      renderTreeNode = props.renderTreeNode,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"data\", \"style\", \"appearance\", \"cleanable\", \"countable\", \"searchBy\", \"toggleAs\", \"searchKeyword\", \"showIndentLine\", \"locale\", \"cascade\", \"disabled\", \"valueKey\", \"labelKey\", \"placement\", \"childrenKey\", \"placeholder\", \"value\", \"defaultValue\", \"defaultExpandAll\", \"disabledItemValues\", \"expandItemValues\", \"defaultExpandItemValues\", \"height\", \"menuStyle\", \"searchable\", \"virtualized\", \"className\", \"classPrefix\", \"menuClassName\", \"menuAutoWidth\", \"uncheckableItemValues\", \"id\", \"listProps\", \"renderMenu\", \"getChildren\", \"renderExtraFooter\", \"onEntered\", \"onChange\", \"onClean\", \"onClose\", \"onExited\", \"onSearch\", \"onSelect\", \"onOpen\", \"onScroll\", \"onExpand\", \"renderValue\", \"renderTreeIcon\", \"renderTreeNode\"]);\n\n  var _useContext = useContext(TreeContext),\n      inline = _useContext.inline;\n\n  var triggerRef = useRef(null);\n  var targetRef = useRef(null);\n  var listRef = useRef(null);\n  var overlayRef = useRef(null);\n  var searchInputRef = useRef(null);\n  var treeViewRef = useRef(null);\n\n  var _useCustom = useCustom('Picker', overrideLocale),\n      rtl = _useCustom.rtl,\n      locale = _useCustom.locale;\n\n  var _useState = useState(false),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var _useState2 = useState(null),\n      activeNode = _useState2[0],\n      setActiveNode = _useState2[1];\n\n  var _useClassNames = useClassNames(classPrefix),\n      prefix = _useClassNames.prefix,\n      merge = _useClassNames.merge;\n\n  var _useClassNames2 = useClassNames('check-tree'),\n      checkTreePrefix = _useClassNames2.prefix,\n      withCheckTreeClassPrefix = _useClassNames2.withClassPrefix;\n\n  var _useControlled = useControlled(controlledValue, defaultValue),\n      value = _useControlled[0],\n      setValue = _useControlled[1],\n      isControlled = _useControlled[2];\n\n  var _useGetTreeNodeChildr = useGetTreeNodeChildren(data, valueKey, childrenKey),\n      treeData = _useGetTreeNodeChildr.data,\n      setTreeData = _useGetTreeNodeChildr.setData,\n      loadingNodeValues = _useGetTreeNodeChildr.loadingNodeValues,\n      loadChildren = _useGetTreeNodeChildr.loadChildren;\n\n  var _useControlled2 = useControlled(controlledExpandItemValues, getDefaultExpandItemValues(treeData, {\n    defaultExpandAll: defaultExpandAll,\n    valueKey: valueKey,\n    childrenKey: childrenKey,\n    defaultExpandItemValues: defaultExpandItemValues\n  })),\n      expandItemValues = _useControlled2[0],\n      setExpandItemValues = _useControlled2[1];\n\n  var _useState3 = useState(null),\n      focusItemValue = _useState3[0],\n      setFocusItemValue = _useState3[1];\n\n  var _useFlattenTreeData = useFlattenTreeData({\n    data: treeData,\n    labelKey: labelKey,\n    valueKey: valueKey,\n    childrenKey: childrenKey,\n    uncheckableItemValues: uncheckableItemValues,\n    callback: function callback(nodes) {\n      // after flattenData, always unSerialize check property value\n      unSerializeList({\n        nodes: nodes,\n        key: 'check',\n        value: value,\n        cascade: cascade,\n        uncheckableItemValues: uncheckableItemValues\n      });\n      forceUpdate();\n    }\n  }),\n      flattenNodes = _useFlattenTreeData.flattenNodes,\n      forceUpdate = _useFlattenTreeData.forceUpdate,\n      formatVirtualizedTreeData = _useFlattenTreeData.formatVirtualizedTreeData,\n      serializeListOnlyParent = _useFlattenTreeData.serializeListOnlyParent,\n      unSerializeList = _useFlattenTreeData.unSerializeList;\n\n  var _useTreeSearch = useTreeSearch({\n    labelKey: labelKey,\n    childrenKey: childrenKey,\n    searchKeyword: searchKeyword,\n    data: treeData,\n    searchBy: searchBy,\n    callback: function callback(searchKeyword, _filterData, event) {\n      onSearch === null || onSearch === void 0 ? void 0 : onSearch(searchKeyword, event);\n    }\n  }),\n      filteredData = _useTreeSearch.filteredData,\n      searchKeywordState = _useTreeSearch.searchKeywordState,\n      setSearchKeyword = _useTreeSearch.setSearchKeyword,\n      handleSearch = _useTreeSearch.handleSearch,\n      setFilteredData = _useTreeSearch.setFilteredData;\n\n  var _useTreeNodeRefs = useTreeNodeRefs(),\n      treeNodesRefs = _useTreeNodeRefs.treeNodesRefs,\n      saveTreeNodeRef = _useTreeNodeRefs.saveTreeNodeRef;\n  /**\n   * get formatted nodes for render tree\n   * @params render - renderNode function. only used when virtualized setting false\n   */\n\n\n  var getFormattedNodes = useCallback(function (render) {\n    if (virtualized) {\n      return formatVirtualizedTreeData(flattenNodes, filteredData, expandItemValues, {\n        cascade: cascade,\n        searchKeyword: searchKeywordState\n      }).filter(function (item) {\n        return item.visible;\n      });\n    }\n\n    return getFormattedTree(filteredData, flattenNodes, {\n      childrenKey: childrenKey,\n      cascade: cascade\n    }).map(function (node) {\n      return render === null || render === void 0 ? void 0 : render(node, 1);\n    });\n  }, [searchKeywordState, expandItemValues, filteredData, flattenNodes, formatVirtualizedTreeData, virtualized, childrenKey, cascade]);\n\n  var getTreeNodeProps = function getTreeNodeProps(node, layer) {\n    return {\n      as: Component,\n      rtl: rtl,\n      value: node[valueKey],\n      label: node[labelKey],\n      layer: layer,\n      focus: shallowEqual(focusItemValue, node[valueKey]),\n      expand: node.expand,\n      visible: node.visible,\n      loading: loadingNodeValues.some(function (item) {\n        return shallowEqual(item, node[valueKey]);\n      }),\n      disabled: getDisabledState(flattenNodes, node, {\n        disabledItemValues: disabledItemValues,\n        valueKey: valueKey\n      }),\n      nodeData: node,\n      checkState: node.checkState,\n      uncheckable: isNodeUncheckable(node, {\n        uncheckableItemValues: uncheckableItemValues,\n        valueKey: valueKey\n      }),\n      allUncheckable: isAllSiblingNodeUncheckable(node, flattenNodes, uncheckableItemValues, valueKey),\n      onSelect: handleSelect,\n      onExpand: handleExpand,\n      onRenderTreeNode: renderTreeNode,\n      onRenderTreeIcon: renderTreeIcon\n    };\n  };\n\n  var focusActiveNode = useCallback(function () {\n    focusToActiveTreeNode({\n      list: listRef.current,\n      valueKey: valueKey,\n      selector: \".\" + checkTreePrefix('node-active'),\n      activeNode: activeNode,\n      virtualized: virtualized,\n      container: treeViewRef.current,\n      formattedNodes: getFormattedNodes()\n    });\n  }, [checkTreePrefix, activeNode, getFormattedNodes, valueKey, virtualized]);\n  useEffect(function () {\n    setValue(getCheckTreePickerDefaultValue(value, uncheckableItemValues));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setFilteredData(data, searchKeywordState);\n    setTreeData(data);\n  }, [data, searchKeywordState, setFilteredData, setTreeData]);\n  useEffect(function () {\n    setFilteredData(treeData, searchKeywordState);\n  }, [treeData, searchKeywordState, setFilteredData]);\n  useEffect(function () {\n    if (Array.isArray(controlledExpandItemValues)) {\n      setExpandItemValues(controlledExpandItemValues);\n    }\n  }, [controlledExpandItemValues, setExpandItemValues]);\n  useEffect(function () {\n    setSearchKeyword(searchKeyword !== null && searchKeyword !== void 0 ? searchKeyword : '');\n  }, [searchKeyword, setSearchKeyword]);\n  useEffect(function () {\n    unSerializeList({\n      nodes: flattenNodes,\n      key: 'check',\n      value: value,\n      cascade: cascade,\n      uncheckableItemValues: uncheckableItemValues\n    });\n    forceUpdate();\n  }, [cascade, value, uncheckableItemValues, unSerializeList, flattenNodes, forceUpdate]);\n  var toggleUpChecked = useCallback(function (nodes, node, checked) {\n    var currentNode = nodes[node.refKey];\n\n    if (cascade) {\n      if (!checked) {\n        currentNode.check = checked;\n        currentNode.checkAll = checked;\n      } else {\n        if (isEveryChildChecked(nodes, currentNode)) {\n          currentNode.check = true;\n          currentNode.checkAll = true;\n        } else {\n          currentNode.check = false;\n          currentNode.checkAll = false;\n        }\n      }\n\n      if (currentNode.parent) {\n        toggleUpChecked(nodes, currentNode.parent, checked);\n      }\n    }\n  }, [cascade]);\n  var toggleDownChecked = useCallback(function (nodes, node, isChecked) {\n    var currentNode = nodes[node.refKey];\n    currentNode.check = isChecked;\n\n    if (!currentNode[childrenKey] || !currentNode[childrenKey].length || !cascade) {\n      currentNode.checkAll = false;\n    } else {\n      currentNode.checkAll = isChecked;\n      currentNode[childrenKey].forEach(function (child) {\n        toggleDownChecked(nodes, child, isChecked);\n      });\n    }\n  }, [cascade, childrenKey]);\n  var toggleChecked = useCallback(function (node, isChecked) {\n    var nodes = _cloneDeep(flattenNodes);\n\n    toggleDownChecked(nodes, node, isChecked);\n    node.parent && toggleUpChecked(nodes, node.parent, isChecked);\n    var values = serializeListOnlyParent(nodes, 'check'); // filter uncheckableItemValues\n\n    return values.filter(function (v) {\n      return !uncheckableItemValues.includes(v);\n    });\n  }, [flattenNodes, uncheckableItemValues, serializeListOnlyParent, toggleDownChecked, toggleUpChecked]);\n  var handleSelect = useCallback(function (node, event) {\n    if (!node) {\n      return;\n    }\n\n    var selectedValues = toggleChecked(node, !flattenNodes[node.refKey].check);\n\n    if (!isControlled) {\n      unSerializeList({\n        nodes: flattenNodes,\n        key: 'check',\n        value: selectedValues,\n        cascade: cascade,\n        uncheckableItemValues: uncheckableItemValues\n      });\n      setValue(selectedValues);\n    }\n\n    setActiveNode(node);\n    setFocusItemValue(node[valueKey]);\n    onChange === null || onChange === void 0 ? void 0 : onChange(selectedValues, event);\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(node, selectedValues, event);\n  }, [cascade, valueKey, flattenNodes, isControlled, uncheckableItemValues, setValue, onChange, onSelect, toggleChecked, unSerializeList]);\n\n  var hasValue = function hasValue() {\n    var selectedValues = Object.keys(flattenNodes).map(function (refKey) {\n      return flattenNodes[refKey][valueKey];\n    }).filter(function (item) {\n      return value.some(function (v) {\n        return shallowEqual(v, item);\n      });\n    });\n    return !!selectedValues.length;\n  };\n\n  var handleOpen = useCallback(function () {\n    var _triggerRef$current, _triggerRef$current$o;\n\n    (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : (_triggerRef$current$o = _triggerRef$current.open) === null || _triggerRef$current$o === void 0 ? void 0 : _triggerRef$current$o.call(_triggerRef$current);\n    setFocusItemValue(activeNode === null || activeNode === void 0 ? void 0 : activeNode[valueKey]);\n    focusActiveNode();\n    onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n    setActive(true);\n  }, [activeNode, focusActiveNode, onOpen, valueKey]);\n  var handleClose = useCallback(function () {\n    var _triggerRef$current2, _triggerRef$current2$, _targetRef$current;\n\n    (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : (_triggerRef$current2$ = _triggerRef$current2.close) === null || _triggerRef$current2$ === void 0 ? void 0 : _triggerRef$current2$.call(_triggerRef$current2);\n    setSearchKeyword('');\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n    setFocusItemValue(null);\n    setActive(false);\n    /**\n     * when using keyboard toggle picker, should refocus on PickerToggle Component after close picker menu\n     */\n\n    (_targetRef$current = targetRef.current) === null || _targetRef$current === void 0 ? void 0 : _targetRef$current.focus();\n  }, [onClose, setSearchKeyword]);\n  var handleExpand = useCallback(function (node) {\n    var nextExpandItemValues = toggleExpand({\n      node: node,\n      isExpand: !node.expand,\n      expandItemValues: expandItemValues,\n      valueKey: valueKey\n    });\n    setExpandItemValues(nextExpandItemValues);\n    onExpand === null || onExpand === void 0 ? void 0 : onExpand(nextExpandItemValues, node, createConcatChildrenFunction(node, node[valueKey], {\n      valueKey: valueKey,\n      childrenKey: childrenKey\n    }));\n\n    if (_isFunction(getChildren) && !node.expand && Array.isArray(node[childrenKey]) && node[childrenKey].length === 0) {\n      loadChildren(node, getChildren);\n    }\n  }, [childrenKey, expandItemValues, getChildren, loadChildren, onExpand, setExpandItemValues, valueKey]);\n  usePublicMethods(ref, {\n    rootRef: inline ? treeViewRef : undefined,\n    triggerRef: triggerRef,\n    overlayRef: overlayRef,\n    targetRef: targetRef,\n    listRef: listRef,\n    inline: inline\n  });\n  var handleClean = useCallback(function (event) {\n    var target = event.target; // exclude searchBar\n\n    if (target.matches('div[role=\"searchbox\"] > input')) {\n      return;\n    }\n\n    setActiveNode(null);\n    setValue([]);\n    setFocusItemValue(null);\n    unSerializeList({\n      nodes: flattenNodes,\n      key: 'check',\n      value: [],\n      cascade: cascade,\n      uncheckableItemValues: uncheckableItemValues\n    });\n    onChange === null || onChange === void 0 ? void 0 : onChange([], event);\n  }, [cascade, flattenNodes, onChange, setValue, unSerializeList, uncheckableItemValues]);\n  var handleFocusItem = useCallback(function (key) {\n    var focusableItems = getFocusableItems(filteredData, {\n      disabledItemValues: disabledItemValues,\n      valueKey: valueKey,\n      childrenKey: childrenKey,\n      expandItemValues: expandItemValues\n    }, isSearching(searchKeywordState));\n    var selector = \".\" + checkTreePrefix('node-label');\n    var focusProps = {\n      focusItemValue: focusItemValue,\n      focusableItems: focusableItems,\n      treeNodesRefs: treeNodesRefs,\n      selector: selector,\n      valueKey: valueKey,\n      callback: function callback(nextFocusItemValue) {\n        setFocusItemValue(nextFocusItemValue);\n      }\n    };\n\n    if (key === KEY_VALUES.DOWN) {\n      focusNextItem(focusProps);\n      return;\n    }\n\n    if (key === KEY_VALUES.UP) {\n      focusPreviousItem(focusProps);\n    }\n  }, [searchKeywordState, checkTreePrefix, expandItemValues, filteredData, focusItemValue, treeNodesRefs, childrenKey, valueKey, disabledItemValues]);\n  var handleLeftArrow = useCallback(function () {\n    if (_isNil(focusItemValue)) return;\n    var focusItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n    leftArrowHandler({\n      focusItem: focusItem,\n      expand: expandItemValues.includes(focusItem === null || focusItem === void 0 ? void 0 : focusItem[valueKey]),\n      onExpand: handleExpand,\n      childrenKey: childrenKey,\n      onFocusItem: function onFocusItem() {\n        var _focusItem$parent, _focusItem$parent2;\n\n        setFocusItemValue(focusItem === null || focusItem === void 0 ? void 0 : (_focusItem$parent = focusItem.parent) === null || _focusItem$parent === void 0 ? void 0 : _focusItem$parent[valueKey]);\n        focusTreeNode(focusItem === null || focusItem === void 0 ? void 0 : (_focusItem$parent2 = focusItem.parent) === null || _focusItem$parent2 === void 0 ? void 0 : _focusItem$parent2.refKey, treeNodesRefs, \".\" + checkTreePrefix('node-label'));\n      }\n    });\n  }, [checkTreePrefix, expandItemValues, flattenNodes, focusItemValue, handleExpand, treeNodesRefs, valueKey, childrenKey]);\n  var handleRightArrow = useCallback(function () {\n    if (_isNil(focusItemValue)) return;\n    var focusItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n    rightArrowHandler({\n      focusItem: focusItem,\n      expand: expandItemValues.includes(focusItem === null || focusItem === void 0 ? void 0 : focusItem[valueKey]),\n      childrenKey: childrenKey,\n      onExpand: handleExpand,\n      onFocusItem: function onFocusItem() {\n        handleFocusItem(KEY_VALUES.DOWN);\n      }\n    });\n  }, [focusItemValue, flattenNodes, valueKey, expandItemValues, childrenKey, handleExpand, handleFocusItem]);\n  var selectActiveItem = useCallback(function (event) {\n    if (_isNil(focusItemValue)) return;\n    var activeItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n\n    if (!isNodeUncheckable(activeItem, {\n      uncheckableItemValues: uncheckableItemValues,\n      valueKey: valueKey\n    }) && activeItem !== null) {\n      handleSelect(activeItem, event);\n    }\n  }, [flattenNodes, focusItemValue, handleSelect, uncheckableItemValues, valueKey]);\n  var onPickerKeydown = useToggleKeyDownEvent({\n    toggle: !focusItemValue || !active,\n    triggerRef: triggerRef,\n    targetRef: targetRef,\n    overlayRef: overlayRef,\n    searchInputRef: searchInputRef,\n    active: active,\n    onExit: handleClean,\n    onClose: handleClose,\n    onMenuKeyDown: function onMenuKeyDown(event) {\n      _onMenuKeyDown(event, {\n        down: function down() {\n          return handleFocusItem(KEY_VALUES.DOWN);\n        },\n        up: function up() {\n          return handleFocusItem(KEY_VALUES.UP);\n        },\n        left: rtl ? handleRightArrow : handleLeftArrow,\n        right: rtl ? handleLeftArrow : handleRightArrow,\n        enter: selectActiveItem,\n        del: handleClean\n      });\n    }\n  });\n  var handleTreeKeydown = useCallback(function (event) {\n    if (!treeViewRef.current) {\n      return;\n    }\n\n    _onMenuKeyDown(event, {\n      down: function down() {\n        return handleFocusItem(KEY_VALUES.DOWN);\n      },\n      up: function up() {\n        return handleFocusItem(KEY_VALUES.UP);\n      },\n      left: rtl ? handleRightArrow : handleLeftArrow,\n      right: rtl ? handleLeftArrow : handleRightArrow,\n      enter: selectActiveItem\n    });\n  }, [handleFocusItem, handleLeftArrow, handleRightArrow, rtl, selectActiveItem]);\n\n  var renderNode = function renderNode(node, layer) {\n    var visible = node.visible,\n        refKey = node.refKey; // when searching, all nodes should be expand\n\n    var expand = getExpandWhenSearching(searchKeywordState, expandItemValues.includes(node[valueKey]));\n\n    if (!visible) {\n      return null;\n    }\n\n    var children = node[childrenKey];\n    var visibleChildren = _isUndefined(searchKeywordState) || searchKeywordState.length === 0 ? !!children : hasVisibleChildren(node, childrenKey);\n\n    var nodeProps = _extends({}, getTreeNodeProps(_extends({}, node, {\n      expand: expand\n    }), layer), {\n      hasChildren: visibleChildren\n    });\n\n    if (nodeProps.hasChildren) {\n      var _merge;\n\n      layer += 1;\n      var openClass = checkTreePrefix('open');\n      var childrenClass = merge(checkTreePrefix('node-children'), (_merge = {}, _merge[openClass] = expand && visibleChildren, _merge));\n      var nodes = children || [];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: childrenClass,\n        key: node[valueKey]\n      }, /*#__PURE__*/React.createElement(CheckTreeNode, _extends({}, nodeProps, {\n        ref: function ref(_ref) {\n          return saveTreeNodeRef(_ref, refKey);\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: checkTreePrefix('children')\n      }, nodes.map(function (child) {\n        return renderNode(child, layer);\n      }), showIndentLine && /*#__PURE__*/React.createElement(\"span\", {\n        className: checkTreePrefix('indent-line'),\n        style: getTreeNodeIndent(rtl, layer - 1, true)\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(CheckTreeNode, _extends({\n      key: node[valueKey],\n      ref: function ref(_ref2) {\n        return saveTreeNodeRef(_ref2, refKey);\n      }\n    }, nodeProps));\n  };\n\n  var renderVirtualListNode = function renderVirtualListNode(nodes) {\n    return function (_ref3) {\n      var key = _ref3.key,\n          index = _ref3.index,\n          style = _ref3.style;\n      var node = nodes[index];\n      var layer = node.layer,\n          refKey = node.refKey,\n          visible = node.visible;\n      var expand = getExpandWhenSearching(searchKeywordState, expandItemValues.includes(node[valueKey]));\n\n      var nodeProps = _extends({}, getTreeNodeProps(_extends({}, node, {\n        expand: expand\n      }), layer), {\n        hasChildren: node.hasChildren\n      });\n\n      return visible && /*#__PURE__*/React.createElement(CheckTreeNode, _extends({\n        style: style,\n        key: key,\n        ref: function ref(_ref4) {\n          return saveTreeNodeRef(_ref4, refKey);\n        }\n      }, nodeProps));\n    };\n  };\n\n  var renderCheckTree = function renderCheckTree() {\n    var _withCheckTreeClassPr, _merge2;\n\n    var classes = withCheckTreeClassPrefix((_withCheckTreeClassPr = {}, _withCheckTreeClassPr[className !== null && className !== void 0 ? className : ''] = inline, _withCheckTreeClassPr['without-children'] = !isSomeNodeHasChildren, _withCheckTreeClassPr.virtualized = virtualized, _withCheckTreeClassPr));\n    var formattedNodes = getFormattedNodes(renderNode);\n\n    if (!formattedNodes.some(function (v) {\n      return v !== null;\n    })) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('none')\n      }, locale.noResultsText);\n    }\n\n    var treeNodesClass = merge(checkTreePrefix('nodes'), (_merge2 = {}, _merge2[checkTreePrefix('all-uncheckable')] = isEveryFirstLevelNodeUncheckable(flattenNodes, uncheckableItemValues, valueKey), _merge2));\n    var styles = inline ? _extends({\n      height: height\n    }, style) : {};\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: id ? id + \"-listbox\" : undefined,\n      ref: treeViewRef,\n      role: \"tree\",\n      \"aria-multiselectable\": true,\n      className: classes,\n      style: styles,\n      onScroll: onScroll,\n      onKeyDown: inline ? handleTreeKeydown : undefined\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: treeNodesClass\n    }, virtualized ? /*#__PURE__*/React.createElement(AutoSizer, {\n      defaultHeight: inline ? height : maxTreeHeight,\n      style: {\n        width: 'auto',\n        height: 'auto'\n      }\n    }, function (_ref5) {\n      var height = _ref5.height,\n          width = _ref5.width;\n      return /*#__PURE__*/React.createElement(List, _extends({\n        ref: listRef,\n        width: width,\n        height: height,\n        rowHeight: 36,\n        rowCount: formattedNodes.length,\n        rowRenderer: renderVirtualListNode(formattedNodes),\n        scrollToAlignment: \"center\"\n      }, listProps));\n    }) : formattedNodes));\n  };\n\n  var renderDropdownMenu = function renderDropdownMenu(positionProps, speakerRef) {\n    var left = positionProps.left,\n        top = positionProps.top,\n        className = positionProps.className;\n    var classes = classNames(className, menuClassName, prefix('check-tree-menu'));\n\n    var mergedMenuStyle = _extends({}, menuStyle, {\n      left: left,\n      top: top\n    });\n\n    var styles = virtualized ? _extends({\n      height: height\n    }, mergedMenuStyle) : _extends({}, mergedMenuStyle);\n    return /*#__PURE__*/React.createElement(PickerOverlay, {\n      autoWidth: menuAutoWidth,\n      className: classes,\n      style: styles,\n      ref: mergeRefs(overlayRef, speakerRef),\n      onKeyDown: onPickerKeydown,\n      target: triggerRef\n    }, searchable ? /*#__PURE__*/React.createElement(SearchBar, {\n      placeholder: locale.searchPlaceholder,\n      onChange: handleSearch,\n      value: searchKeywordState,\n      inputRef: searchInputRef\n    }) : null, renderMenu ? renderMenu(renderCheckTree()) : renderCheckTree(), renderExtraFooter === null || renderExtraFooter === void 0 ? void 0 : renderExtraFooter());\n  };\n  /**\n   * 1.Have a value and the value is valid.\n   * 2.Regardless of whether the value is valid, as long as renderValue is set, it is judged to have a value.\n   */\n\n\n  var hasValidValue = hasValue() || value.length > 0 && _isFunction(renderValue);\n\n  var selectedElement = placeholder;\n  var selectedItems = getSelectedItems(flattenNodes, value, valueKey);\n\n  if (hasValidValue) {\n    selectedElement = /*#__PURE__*/React.createElement(SelectedElement, {\n      selectedItems: selectedItems,\n      countable: countable,\n      valueKey: valueKey,\n      labelKey: labelKey,\n      childrenKey: childrenKey,\n      prefix: prefix,\n      cascade: cascade,\n      locale: locale\n    });\n\n    if (_isFunction(renderValue)) {\n      selectedElement = renderValue(value, selectedItems, selectedElement);\n\n      if (_isNil(selectedElement)) {\n        hasValidValue = false;\n      }\n    }\n  }\n\n  var _usePickerClassName = usePickerClassName(_extends({}, props, {\n    classPrefix: classPrefix,\n    appearance: appearance,\n    countable: countable,\n    cleanable: cleanable,\n    disabled: disabled,\n    hasValue: hasValidValue,\n    name: 'check-tree'\n  })),\n      classes = _usePickerClassName[0],\n      usedClassNamePropKeys = _usePickerClassName[1];\n\n  if (inline) {\n    return renderCheckTree();\n  }\n\n  return /*#__PURE__*/React.createElement(PickerToggleTrigger, {\n    pickerProps: _pick(props, pickTriggerPropKeys),\n    ref: triggerRef,\n    placement: placement,\n    onEnter: handleOpen,\n    onEntered: onEntered,\n    onExited: createChainedFunction(handleClose, onExited),\n    speaker: renderDropdownMenu\n  }, /*#__PURE__*/React.createElement(Component, {\n    className: classes,\n    style: style\n  }, /*#__PURE__*/React.createElement(PickerToggle, _extends({}, _omit(rest, [].concat(omitTriggerPropKeys, usedClassNamePropKeys)), {\n    id: id,\n    ref: targetRef,\n    appearance: appearance,\n    onKeyDown: onPickerKeydown,\n    onClean: createChainedFunction(handleClean, onClean),\n    cleanable: cleanable && !disabled,\n    disabled: disabled,\n    as: toggleAs,\n    hasValue: hasValidValue,\n    active: active,\n    placement: placement,\n    inputValue: value\n  }), selectedElement || locale.placeholder)));\n});\nCheckTreePicker.displayName = 'CheckTreePicker';\nCheckTreePicker.propTypes = _extends({}, listPickerPropTypes, {\n  height: PropTypes.number,\n  appearance: PropTypes.oneOf(['default', 'subtle']),\n  locale: PropTypes.any,\n  cascade: PropTypes.bool,\n  countable: PropTypes.bool,\n  searchable: PropTypes.bool,\n  virtualized: PropTypes.bool,\n  searchKeyword: PropTypes.string,\n  menuAutoWidth: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  containerPadding: PropTypes.number,\n  disabledItemValues: PropTypes.array,\n  expandItemValues: PropTypes.array,\n  defaultExpandItemValues: PropTypes.array,\n  uncheckableItemValues: PropTypes.array,\n  onSearch: PropTypes.func,\n  onExpand: PropTypes.func,\n  onSelect: PropTypes.func,\n  renderMenu: PropTypes.func,\n  renderTreeNode: PropTypes.func,\n  renderTreeIcon: PropTypes.func,\n  searchBy: PropTypes.func,\n  onScroll: PropTypes.func\n});\nexport default CheckTreePicker;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\"; // Headless Disclosure\n// Ref: https://w3c.github.io/aria-practices/#disclosure\n\nimport React, { useMemo, useReducer, useRef } from 'react';\nimport DisclosureContext, { DisclosureActionTypes } from './DisclosureContext';\nimport DisclosureButton from './DisclosureButton';\nimport DisclosureContent from './DisclosureContent';\nimport useClickOutside from '../utils/useClickOutside';\nvar initialDisclosureState = {\n  open: false\n};\n\nfunction disclosureReducer(state, action) {\n  switch (action.type) {\n    case DisclosureActionTypes.Show:\n      return _extends({}, state, {\n        open: true\n      });\n\n    case DisclosureActionTypes.Hide:\n      return _extends({}, state, {\n        open: false\n      });\n  }\n\n  return state;\n}\n\nfunction Disclosure(props) {\n  var children = props.children,\n      openProp = props.open,\n      _props$defaultOpen = props.defaultOpen,\n      defaultOpen = _props$defaultOpen === void 0 ? false : _props$defaultOpen,\n      _props$hideOnClickOut = props.hideOnClickOutside,\n      hideOnClickOutside = _props$hideOnClickOut === void 0 ? false : _props$hideOnClickOut,\n      onToggle = props.onToggle;\n\n  var _useReducer = useReducer(disclosureReducer, _extends({}, initialDisclosureState, {\n    open: defaultOpen\n  })),\n      openState = _useReducer[0].open,\n      dispatch = _useReducer[1];\n\n  var containerElementRef = useRef(null);\n  var open = openProp !== null && openProp !== void 0 ? openProp : openState;\n  useClickOutside({\n    enabled: hideOnClickOutside,\n    isOutside: function isOutside(event) {\n      var _containerElementRef$;\n\n      return !((_containerElementRef$ = containerElementRef.current) !== null && _containerElementRef$ !== void 0 && _containerElementRef$.contains(event.target));\n    },\n    handle: function handle() {\n      return dispatch({\n        type: DisclosureActionTypes.Hide\n      });\n    }\n  });\n  var context = useMemo(function () {\n    return [{\n      open: open\n    }, dispatch, {\n      onToggle: onToggle\n    }];\n  }, [open, dispatch, onToggle]);\n  return /*#__PURE__*/React.createElement(DisclosureContext.Provider, {\n    value: context\n  }, children({\n    open: open\n  }, containerElementRef));\n}\n\nDisclosure.Button = DisclosureButton;\nDisclosure.Content = DisclosureContent;\nexport default Disclosure;","map":{"version":3,"sources":["/Users/pango/Documents/Open/opener/frontend/node_modules/rsuite/esm/Disclosure/Disclosure.js"],"names":["_extends","React","useMemo","useReducer","useRef","DisclosureContext","DisclosureActionTypes","DisclosureButton","DisclosureContent","useClickOutside","initialDisclosureState","open","disclosureReducer","state","action","type","Show","Hide","Disclosure","props","children","openProp","_props$defaultOpen","defaultOpen","_props$hideOnClickOut","hideOnClickOutside","onToggle","_useReducer","openState","dispatch","containerElementRef","enabled","isOutside","event","_containerElementRef$","current","contains","target","handle","context","createElement","Provider","value","Button","Content"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\n// Headless Disclosure\n// Ref: https://w3c.github.io/aria-practices/#disclosure\nimport React, { useMemo, useReducer, useRef } from 'react';\nimport DisclosureContext, { DisclosureActionTypes } from './DisclosureContext';\nimport DisclosureButton from './DisclosureButton';\nimport DisclosureContent from './DisclosureContent';\nimport useClickOutside from '../utils/useClickOutside';\nvar initialDisclosureState = {\n  open: false\n};\n\nfunction disclosureReducer(state, action) {\n  switch (action.type) {\n    case DisclosureActionTypes.Show:\n      return _extends({}, state, {\n        open: true\n      });\n\n    case DisclosureActionTypes.Hide:\n      return _extends({}, state, {\n        open: false\n      });\n  }\n\n  return state;\n}\n\nfunction Disclosure(props) {\n  var children = props.children,\n      openProp = props.open,\n      _props$defaultOpen = props.defaultOpen,\n      defaultOpen = _props$defaultOpen === void 0 ? false : _props$defaultOpen,\n      _props$hideOnClickOut = props.hideOnClickOutside,\n      hideOnClickOutside = _props$hideOnClickOut === void 0 ? false : _props$hideOnClickOut,\n      onToggle = props.onToggle;\n\n  var _useReducer = useReducer(disclosureReducer, _extends({}, initialDisclosureState, {\n    open: defaultOpen\n  })),\n      openState = _useReducer[0].open,\n      dispatch = _useReducer[1];\n\n  var containerElementRef = useRef(null);\n  var open = openProp !== null && openProp !== void 0 ? openProp : openState;\n  useClickOutside({\n    enabled: hideOnClickOutside,\n    isOutside: function isOutside(event) {\n      var _containerElementRef$;\n\n      return !((_containerElementRef$ = containerElementRef.current) !== null && _containerElementRef$ !== void 0 && _containerElementRef$.contains(event.target));\n    },\n    handle: function handle() {\n      return dispatch({\n        type: DisclosureActionTypes.Hide\n      });\n    }\n  });\n  var context = useMemo(function () {\n    return [{\n      open: open\n    }, dispatch, {\n      onToggle: onToggle\n    }];\n  }, [open, dispatch, onToggle]);\n  return /*#__PURE__*/React.createElement(DisclosureContext.Provider, {\n    value: context\n  }, children({\n    open: open\n  }, containerElementRef));\n}\n\nDisclosure.Button = DisclosureButton;\nDisclosure.Content = DisclosureContent;\nexport default Disclosure;"]},"metadata":{},"sourceType":"module"}